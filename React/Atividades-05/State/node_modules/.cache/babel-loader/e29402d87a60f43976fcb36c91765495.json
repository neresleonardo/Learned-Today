{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documentos/Git/Learned-Today/React/Atividades-04/hooks/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function App() {\n  const [respositiries, setRespositiries] = useState([]);\n  useEffect(async () => {\n    const response = await fetch('https://api.github.com/users/neresleonardo/repos');\n    const data = await response.json();\n    setRespositiries(data);\n  }, []);\n  useEffect(() => {\n    const filtered = respositiries.filter(repo => repo.favorite);\n    document.title = `Voce tem ${filtered.length} favoritos`;\n  }, [respositiries]);\n\n  function handleFavorito(id) {\n    const newRepositories = respositiries.map(repo => {\n      return repo.id === id ? { ...repo,\n        favorite: !repo.favorite\n      } : repo;\n    });\n    setRespositiries(newRepositories);\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, respositiries.map(repo => /*#__PURE__*/React.createElement(\"li\", {\n    key: repo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, repo.name, repo.favorite && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"(Favorito)\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleFavorito(repo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Favoritar\"))));\n}","map":{"version":3,"sources":["/home/leo/Documentos/Git/Learned-Today/React/Atividades-04/hooks/src/App.js"],"names":["React","useState","useEffect","App","respositiries","setRespositiries","response","fetch","data","json","filtered","filter","repo","favorite","document","title","length","handleFavorito","id","newRepositories","map","name"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,eAAe,SAASC,GAAT,GAAe;AAE5B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;AAIAC,EAAAA,SAAS,CAAC,YAAW;AACnB,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAJ,IAAAA,gBAAgB,CAACG,IAAD,CAAhB;AAGD,GAPQ,EAON,EAPM,CAAT;AASAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAGN,aAAa,CAACO,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,QAAlC,CAAjB;AAEAC,IAAAA,QAAQ,CAACC,KAAT,GAAkB,YAAWL,QAAQ,CAACM,MAAO,YAA7C;AACD,GAJQ,EAIN,CAACZ,aAAD,CAJM,CAAT;;AAME,WAASa,cAAT,CAAwBC,EAAxB,EAA2B;AAEzB,UAAMC,eAAe,GAAGf,aAAa,CAACgB,GAAd,CAAkBR,IAAI,IAAI;AAChD,aAAOA,IAAI,CAACM,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGN,IAAJ;AAAUC,QAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAA1B,OAAjB,GAAuDD,IAA9D;AAED,KAHuB,CAAxB;AAIAP,IAAAA,gBAAgB,CAACc,eAAD,CAAhB;AACD;;AAEH,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEf,aAAa,CAACgB,GAAd,CAAkBR,IAAI,iBACxB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACM,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACS,IADR,EAEGT,IAAI,CAACC,QAAL,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFpB,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAMI,cAAc,CAACL,IAAI,CAACM,EAAN,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADE,CAFF,CADF;AAaD","sourcesContent":[" \nimport React, { useState, useEffect } from 'react';\nexport default function App() {\n\n  const [respositiries, setRespositiries] = useState([ ])\n \n\n\n  useEffect(async() => {\n    const response = await fetch('https://api.github.com/users/neresleonardo/repos')\n    const data = await response.json();\n\n    setRespositiries(data);\n    \n\n  }, []);\n\n  useEffect(() => {\n    const filtered = respositiries.filter(repo => repo.favorite)\n \n    document.title = `Voce tem ${filtered.length} favoritos`\n  }, [respositiries])\n\n    function handleFavorito(id){\n      \n      const newRepositories = respositiries.map(repo => {\n        return repo.id === id ? {...repo ,favorite: !repo.favorite} : repo\n\n      })\n      setRespositiries(newRepositories)\n    }\n\n  return (\n    <ul>\n\n    { respositiries.map(repo => ( \n    <li key={repo.id}>\n      {repo.name}\n      {repo.favorite && <span>(Favorito)</span>}\n      <button onClick={() => handleFavorito(repo.id)}>Favoritar</button>\n      </li>\n    ))}\n\n    </ul>\n  );\n}"]},"metadata":{},"sourceType":"module"}